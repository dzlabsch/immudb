sudo: required
language: go

services:
  - docker
env:
  global:
    - DOCKER_IMAGE=codenotarydemo/immudb

before_script:
  - sudo apt update && sudo apt install curl rpm -y
  - curl -L -o /tmp/vcn https://github.com/vchain-us/vcn/releases/download/v0.8.3/vcn-v0.8.3-linux-amd64-static
  - curl -L -o /tmp/trivy_0.1.6_Linux-64bit.deb https://github.com/aquasecurity/trivy/releases/download/v0.1.6/trivy_0.1.6_Linux-64bit.deb
  - sudo dpkg -i /tmp/trivy_0.1.6_Linux-64bit.deb
#  - curl -L -o /tmp/snyk https://github.com/snyk/snyk/releases/download/v1.305.0/snyk-linux
  - CHECKSUM=$(sha256sum /tmp/vcn | cut -d " " -f 1)
  - echo $CHECKSUM
  - curl -s https://api.codenotary.io/authenticate/$CHECKSUM?org=vchain.us | grep -q :0
  - chmod +x /tmp/vcn
  - docker pull "$DOCKER_IMAGE" || true
  - curl -sfL https://raw.githubusercontent.com/securego/gosec/master/install.sh | sudo sh -s -- -b $GOPATH/bin latest
  - gosec -fmt=json -out=results.json -no-fail ./...
  - VCN_USER=$codenotary_aqua_user VCN_PASSWORD=$codenotary_aqua_pass /tmp/vcn login
  - VCN_NOTARIZATION_PASSWORD=$codenotary_aqua_pass /tmp/vcn n -p --silent --attr docker_image="$DOCKER_IMAGE" ./results.json
  - if cat results.json | grep "HIGH" > /dev/null; then VCN_NOTARIZATION_PASSWORD=$codenotary_aqua_pass /tmp/vcn untrust -p --silent --attr gosec="Severity high" docker://$DOCKER_IMAGE ; else VCN_NOTARIZATION_PASSWORD=$codenotary_aqua_pass /tmp/vcn n -p --silent --attr gosec="Severity high" docker://$DOCKER_IMAGE ; fi

script:
  - docker build --pull --cache-from "$DOCKER_IMAGE" --tag "$DOCKER_IMAGE" .
#  - trivy --exit-code 0 --severity HIGH --quiet $DOCKER_IMAGE
#  - trivy --exit-code 1 --severity CRITICAL --quiet $DOCKER_IMAGE
  - /tmp/vcn logout
  - VCN_USER=$codenotary_user VCN_PASSWORD=$codenotary_pass /tmp/vcn login
  - VCN_NOTARIZATION_PASSWORD=$codenotary_pass /tmp/vcn n -p --attr TravisCI=${TRAVIS_BUILD_NUMBER} --silent docker://$DOCKER_IMAGE

after_script:
  - docker images

before_deploy:
  - docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASS"
  - docker tag "$DOCKER_IMAGE" "${DOCKER_IMAGE}:latest"
  - docker tag "$DOCKER_IMAGE" "${DOCKER_IMAGE}:${TRAVIS_BUILD_NUMBER}"

deploy:
  provider: script
  script: docker push "${DOCKER_IMAGE}:latest" && docker push "${DOCKER_IMAGE}:${TRAVIS_BUILD_NUMBER}"
  on:
    branch: master
